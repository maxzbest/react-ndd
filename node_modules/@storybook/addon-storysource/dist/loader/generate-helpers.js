'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

exports.generateSourceWithDecorators = generateSourceWithDecorators;
exports.generateAddsMap = generateAddsMap;
exports.generateStorySource = generateStorySource;

var _prettier = require('prettier');

var _prettier2 = _interopRequireDefault(_prettier);

var _parseHelpers = require('./parse-helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var estraverse = require('estraverse');
var acorn = require('acorn');

require('acorn-stage3/inject')(acorn);
require('acorn-jsx/inject')(acorn);
require('acorn-es7')(acorn);

var acornConfig = {
  ecmaVersion: '9',
  sourceType: 'module',
  ranges: true,
  locations: true,
  plugins: {
    jsx: true,
    stage3: true,
    es7: true
  }
};

function isUglyComment(comment, uglyCommentsRegex) {
  return uglyCommentsRegex.some(function (regex) {
    return regex.test(comment);
  });
}

function generateSourceWithoutUglyComments(source, _ref) {
  var comments = _ref.comments,
      uglyCommentsRegex = _ref.uglyCommentsRegex;

  var lastIndex = 0;
  var parts = [source];

  comments.filter(function (comment) {
    return isUglyComment(comment.value.trim(), uglyCommentsRegex);
  }).forEach(function (comment) {
    parts.pop();

    var start = source.slice(lastIndex, comment.start);
    var end = source.slice(comment.end);

    parts.push(start, end);
    lastIndex = comment.end;
  });

  return parts.join('');
}

function prettifyCode(source, _ref2) {
  var prettierConfig = _ref2.prettierConfig;

  return _prettier2.default.format(source, prettierConfig);
}

function generateSourceWithDecorators(source, decorator) {
  var comments = [];

  var config = (0, _extends3.default)({}, acornConfig, {
    onComment: comments
  });

  var ast = acorn.parse(source, config);

  var lastIndex = 0;
  var parts = [source];

  estraverse.traverse(ast, {
    fallback: 'iteration',
    enter: function enter(node) {
      if (node.type === 'CallExpression') {
        lastIndex = (0, _parseHelpers.handleSTORYOF)(node, parts, source, lastIndex);
      }
    }
  });

  var newSource = parts.join(decorator);

  return {
    changed: lastIndex > 0,
    source: newSource,
    comments: comments
  };
}

function generateAddsMap(source) {
  var ast = acorn.parse(source, acornConfig);
  var adds = {};

  estraverse.traverse(ast, {
    fallback: 'iteration',
    enter: function enter(node, parent) {
      if (node.type === 'MemberExpression') {
        (0, _parseHelpers.handleADD)(node, parent, adds);
      }
    }
  });

  return adds;
}

function generateStorySource(_ref3) {
  var source = _ref3.source,
      options = (0, _objectWithoutProperties3.default)(_ref3, ['source']);

  var storySource = source;

  storySource = generateSourceWithoutUglyComments(storySource, options);
  storySource = prettifyCode(storySource, options);

  return storySource;
}