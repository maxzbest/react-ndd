'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _from = require('babel-runtime/core-js/array/from');

var _from2 = _interopRequireDefault(_from);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _components = require('@storybook/components');

var _jsx = require('react-syntax-highlighter/languages/prism/jsx');

var _jsx2 = _interopRequireDefault(_jsx);

var _prism = require('react-syntax-highlighter/styles/prism');

var _prismLight = require('react-syntax-highlighter/prism-light');

var _prismLight2 = _interopRequireDefault(_prismLight);

var _reactSyntaxHighlighter = require('react-syntax-highlighter');

var _ = require('./');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _prismLight.registerLanguage)('jsx', _jsx2.default);

var styles = {
  story: {
    display: 'block',
    textDecoration: 'none',
    color: _prism.darcula['code[class*="language-"]'].color
  },
  selectedStory: {
    backgroundColor: 'rgba(255, 242, 60, 0.2)'
  },
  panel: {
    width: '100%'
  }
};

var StoryPanel = function (_Component) {
  (0, _inherits3.default)(StoryPanel, _Component);
  (0, _createClass3.default)(StoryPanel, null, [{
    key: 'areLocationsEqual',
    value: function areLocationsEqual(a, b) {
      return a.startLoc.line === b.startLoc.line && a.startLoc.col === b.startLoc.col && a.endLoc.line === b.endLoc.line && a.endLoc.col === b.endLoc.col;
    }
  }, {
    key: 'getLocationKeys',
    value: function getLocationKeys(locationsMap) {
      return locationsMap ? (0, _from2.default)((0, _keys2.default)(locationsMap)).sort(function (key1, key2) {
        return locationsMap[key1].startLoc.line - locationsMap[key2].startLoc.line;
      }) : [];
    }
  }]);

  function StoryPanel(props) {
    (0, _classCallCheck3.default)(this, StoryPanel);

    var _this = (0, _possibleConstructorReturn3.default)(this, (StoryPanel.__proto__ || (0, _getPrototypeOf2.default)(StoryPanel)).call(this, props));

    _this.state = { source: '// Here will be dragons üêâ' };

    var channel = props.channel;


    channel.on(_.EVENT_ID, function (_ref) {
      var source = _ref.source,
          currentLocation = _ref.currentLocation,
          locationsMap = _ref.locationsMap;

      var locationsKeys = StoryPanel.getLocationKeys(locationsMap);

      _this.setState({
        source: source,
        currentLocation: currentLocation,
        locationsMap: locationsMap,
        locationsKeys: locationsKeys
      });
    });

    _this.setSelectedStoryRef = _this.setSelectedStoryRef.bind(_this);
    _this.lineRenderer = _this.lineRenderer.bind(_this);
    _this.clickOnStory = _this.clickOnStory.bind(_this);
    return _this;
  }

  (0, _createClass3.default)(StoryPanel, [{
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      if (this.selectedStoryRef) {
        this.selectedStoryRef.scrollIntoView();
      }
    }
  }, {
    key: 'setSelectedStoryRef',
    value: function setSelectedStoryRef(ref) {
      this.selectedStoryRef = ref;
    }
  }, {
    key: 'clickOnStory',
    value: function clickOnStory(kind, story) {
      var api = this.props.api;


      if (kind && story) {
        api.selectStory(kind, story);
      }
    }
  }, {
    key: 'createPart',
    value: function createPart(rows, stylesheet, useInlineStyles) {
      return rows.map(function (node, i) {
        return (0, _reactSyntaxHighlighter.createElement)({
          node: node,
          stylesheet: stylesheet,
          useInlineStyles: useInlineStyles,
          key: 'code-segement' + i
        });
      });
    }
  }, {
    key: 'createStoryPart',
    value: function createStoryPart(rows, stylesheet, useInlineStyles, location, kindStory) {
      var _this2 = this;

      var currentLocation = this.state.currentLocation;

      var first = location.startLoc.line - 1;
      var last = location.endLoc.line;

      var storyRows = rows.slice(first, last);
      var story = this.createPart(storyRows, stylesheet, useInlineStyles);
      var storyKey = first + '-' + last;

      if (StoryPanel.areLocationsEqual(location, currentLocation)) {
        return _react2.default.createElement(
          'div',
          { key: storyKey, ref: this.setSelectedStoryRef, style: styles.selectedStory },
          story
        );
      }

      var _kindStory$split = kindStory.split('@'),
          _kindStory$split2 = (0, _slicedToArray3.default)(_kindStory$split, 2),
          selectedKind = _kindStory$split2[0],
          selectedStory = _kindStory$split2[1];

      var url = '/?selectedKind=' + selectedKind + '&selectedStory=' + selectedStory;

      return _react2.default.createElement(
        _components.RoutedLink,
        {
          href: url,
          key: storyKey,
          onClick: function onClick() {
            return _this2.clickOnStory(selectedKind, selectedStory);
          },
          style: styles.story
        },
        story
      );
    }
  }, {
    key: 'createParts',
    value: function createParts(rows, stylesheet, useInlineStyles) {
      var _this3 = this;

      var _state = this.state,
          locationsMap = _state.locationsMap,
          locationsKeys = _state.locationsKeys;


      var parts = [];
      var lastRow = 0;

      locationsKeys.forEach(function (key) {
        var location = locationsMap[key];
        var first = location.startLoc.line - 1;
        var last = location.endLoc.line;

        var start = _this3.createPart(rows.slice(lastRow, first), stylesheet, useInlineStyles);
        var storyPart = _this3.createStoryPart(rows, stylesheet, useInlineStyles, location, key);

        parts.push(start);
        parts.push(storyPart);

        lastRow = last;
      });

      var lastPart = this.createPart(rows.slice(lastRow), stylesheet, useInlineStyles);

      parts.push(lastPart);

      return parts;
    }
  }, {
    key: 'lineRenderer',
    value: function lineRenderer(_ref2) {
      var rows = _ref2.rows,
          stylesheet = _ref2.stylesheet,
          useInlineStyles = _ref2.useInlineStyles;
      var _state2 = this.state,
          locationsMap = _state2.locationsMap,
          locationsKeys = _state2.locationsKeys;


      if (!locationsMap || !locationsKeys.length) {
        return this.createPart(rows, stylesheet, useInlineStyles);
      }

      var parts = this.createParts(rows, stylesheet, useInlineStyles);

      return _react2.default.createElement(
        'span',
        null,
        parts.map(function (part) {
          return part;
        })
      );
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _prismLight2.default,
        {
          language: 'jsx',
          showLineNumbers: 'true',
          style: _prism.darcula,
          renderer: this.lineRenderer,
          customStyle: styles.panel
        },
        this.state.source
      );
    }
  }]);
  return StoryPanel;
}(_react.Component);

exports.default = StoryPanel;


StoryPanel.propTypes = {
  api: _propTypes2.default.shape({
    selectStory: _propTypes2.default.func.isRequired
  }).isRequired,
  channel: _propTypes2.default.shape({
    emit: _propTypes2.default.func,
    on: _propTypes2.default.func,
    removeListener: _propTypes2.default.func
  }).isRequired
};